<?xml version="1.0" encoding="utf-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Co-oC</title><link>https://worldofrorrim.github.io/en/</link><description>Blog of rorrim in English.</description><generator>Hugo 0.82.0 https://gohugo.io/</generator><language>en-US</language><managingEditor>worldofrorrim@gmail.com (worldofrorrim)</managingEditor><webMaster>worldofrorrim@gmail.com (worldofrorrim)</webMaster><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright><lastBuildDate>Fri, 02 Apr 2021 13:32:25 +0800</lastBuildDate><atom:link rel="self" type="application/rss+xml" href="https://worldofrorrim.github.io/en/rss.xml"/><item><title>Regular Investment-Foreword</title><link>https://worldofrorrim.github.io/en/life/ri-foreword/</link><guid isPermaLink="true">https://worldofrorrim.github.io/en/life/ri-foreword/</guid><pubDate>Thu, 25 Mar 2021 23:00:00 +0800</pubDate><author>worldofrorrim@gmail.com (worldofrorrim)</author><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright><description>&lt;h1 id="regular-investment---a-life-transforming-strategy">Regular Investment - A Life Transforming Strategy&lt;/h1>
&lt;p>——Have time be on your side and continuously enrich you ……&lt;/p>
&lt;p>Li Xiaolai&lt;/p>
&lt;p>July，2019&lt;/p>
&lt;p>You just couldn't afford to miss this book……&lt;/p>
&lt;p>&lt;a href="https://b.watch">https://b.watch&lt;/a>&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Note:&lt;/strong> The audio version is under the &lt;a href="https://github.com/xiaolai/regular-investing-in-box/blob/master/Translations/English/audiobook">audiobook&lt;/a> directory&lt;/p>
&lt;hr>
&lt;h2 id="foreword">Foreword&lt;/h2>
&lt;p>I guess,as an ordinary person,you must have heard a horrified word more than once: &lt;strong>class solidification&lt;/strong>.&lt;/p>
&lt;p>No matter whether the solidification of the hierarchy really exists,whether it is really forming or not,it is definitely a vocabulary that makes ordinary people feel tight when they hear it.&lt;/p></description><category domain="https://worldofrorrim.github.io/en/life/">life</category></item><item><title>区块链-比特币白皮书(Rorrim翻译中...)</title><link>https://worldofrorrim.github.io/en/tech/bitcoin-white-paper/</link><guid isPermaLink="true">https://worldofrorrim.github.io/en/tech/bitcoin-white-paper/</guid><pubDate>Tue, 09 Mar 2021 10:56:00 +0800</pubDate><author>worldofrorrim@gmail.com (worldofrorrim)</author><copyright>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.en)</copyright><description>&lt;h1 id="bitcoina-peer-to-peer-of-electronic-cash-system">Bitcoin:A peer-to-peer of electronic cash system&lt;/h1>
&lt;blockquote>
&lt;p>Author:&lt;a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E6%9C%AC%E8%81%AA">Satoshi Nakamoto&lt;/a> &lt;a href="mailto:satoshin@gmx.com">satoshin@gmx.com&lt;/a> &lt;a href="http://www.bitcoin.org">www.bitcoin.org&lt;/a> 2008.10.31&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>中文翻译: Rorrim &lt;a href="mailto:worldofrorrim@gmail.com">worldofrorrim@gmail.com&lt;/a> 2021.03.09&lt;/p>
&lt;/blockquote>
&lt;h1 id="比特币一种点对点的电子现金系统">比特币:一种点对点的电子现金系统&lt;/h1>
&lt;blockquote>
&lt;p>作者:&lt;a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E6%9C%AC%E8%81%AA">中本聪&lt;/a> &lt;a href="https://zh.wikipedia.org/wiki/%E4%B8%AD%E6%9C%AC%E8%81%AA">Satoshi Nakamoto&lt;/a> &lt;a href="mailto:satoshin@gmx.com">satoshin@gmx.com&lt;/a> &lt;a href="http://www.bitcoin.org">www.bitcoin.org&lt;/a> 2008.10.31&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>中文翻译: Rorrim &lt;a href="mailto:worldofrorrim@gmail.com">worldofrorrim@gmail.com&lt;/a> 2021.03.09&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>Abstract.&lt;/strong> A purely peer-to-peer version of electronic cash would allow online payments to be sent directly from one party to another without going through a financial institution.Digital signatures provide part of the solution，but the main benefits are lost if a trusted third party is still required to prevent double-spending.We propose a solution to the double-spending problem using a peer-to-peer network.The network timestamps transactions by hashing them into an ongoing chain of hash-based proof-of-work，forming a record that cannot be changed without redoing the proof-of-work.The longest chain not only serves as proof of the sequence of events witnessed,but proof that it came from the largest pool of CPU power. As long as a majority of CPU power is controlled by nodes that are not cooperating to attack the network,they'll generate the longest chain and outpace attackers. The network itself requires minimal structure. Messages are broadcast on a best effort basis,and nodes can leave and rejoin the network at will,accepting the longest proof-of-work chain as proof of what happened while they were gone.&lt;/p>
&lt;p>&lt;strong>概要：&lt;/strong> 一个纯粹的电子现金的点对点版本,将允许在线支付从一方到另一方直接发送,而不需要通过任何的金融机构。数字签名提供了解决方案的一部分，但是，如果仍然需要一个受信任的第三方来防止双重支出的话，那么这个系统的主要优势就丧失了。我们提出了一个使用点对点网络时的双重支出问题的解决方案。网络通过将交易散列到一个正在进行的基于哈希的工作量证明的链条中来对交易进行时间戳记，从而形成如果不重做这个工作证明就无法改变的记录。最长的链不仅可以作为已被见证事件的顺序的证明，而且可以作为它是来自最大的CPU算力池的证明。只要CPU算力的绝大多数被不与攻击网络者合作的节点(良性节点)控制着,那么,良性节点将会超过攻击者,从而生成最长链.这个网络本身需要最小的结构。消息在尽最大的努力的基础上广播，节点可以随意的离开和重新加入，节点加入时，接受最长的工作证明链作为未参与期间发生的一切的证明。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="1-简介introduction">1. 简介（Introduction）&lt;/h2>
&lt;hr>
&lt;p>Commerce on the Internet has come to rely almost exclusively on financial institutions serving as trusted third parties to process electronic payments.While the system works well enough for most transactions,it still suffers from the inherent weaknesses of the trust based model.Completely non-reversible transactions are not really possible,since financial institutions cannot avoid mediating disputes.The cost of mediation increases transaction costs，limiting the minimum practical transaction size and cutting off the possibility for small casual transactions,and there is a broader cost in the loss of ability to make non-reversible payments for non-reversible services.With the possibility of reversal, the need for trust spreads. Merchants must be wary of their customers, hassling them for more information than they would otherwise need. A certain percentage of fraud is accepted as unavoidable. These costs and payment uncertainties can be avoided in person by using physical currency, but no mechanism exists to make payments over a communications channel without a trusted party.&lt;/p>
&lt;p>互联网上的商业几乎完全依赖作为可信第三方的金融机构处理电子支付。虽然对于绝大多数交易来说，这个系统运行良好。但是，它仍旧存在基于信任的模型的固有缺点。完全不可逆的交易实际上是不可能的，因为金融机构无法避免仲裁争议。仲裁成本增加了交易的成本，限制了最低实际交易规模，切断了小额临时交易的可能性，并且失去为不可逆服务支付不可逆款项的能力，这带来了更大的成本。随着逆转的可能性，对信任的需求蔓延开来。商人必须提防着他们的顾客，向他们索取比他们原本需要的更多的信息。一定比例的欺诈，被认为是不可避免的。这些成本和支付的不确定性，虽然在人与人之间直接使用物理货币支付的时候是可以避免的；但没有任何一个机制能在没有可信方的情况下通过通信渠道进行支付。&lt;/p>
&lt;p>What is needed is an electronic payment system based on cryptographic proof instead of trust, allowing any two willing parties to transact directly with each other without the need for a trusted third party. Transactions that are computationally impractical to reverse would protect sellers from fraud, and routine escrow mechanisms could easily be implemented to protect buyers. In this paper, we propose a solution to the double-spending problem using a peer-to-peer distributed timestamp server to generate computational proof of the chronological order of transactions. The system is secure as long as honest nodes collectively control more CPU power than any cooperating group of attacker nodes.&lt;/p>
&lt;p>我们需要的是一个基于密码证明而不是信任的电子支付系统，允许任何愿意的双方直接相互交易，而不需要可信的第三方。计算上不切实际的逆转交易将保护卖方免受欺诈，常规托管机制可以很容易地实施以保护买方。在本论文中，我们提出了一种使用对等分布式时间戳服务器生成交易时间顺序的计算证明的双重支出问题的解决方案，只要诚实节点集体控制比任何合作的攻击者节点组掌握更多的 CPU 算力，此系统就是安全的，&lt;/p>
&lt;h2 id="2-交易transactions">2. 交易（Transactions）&lt;/h2>
&lt;hr>
&lt;p>We define an electronic coin as a chain of digital signatures. Each owner transfers the coin to the next by digitally signing a hash of the previous transaction and the public key of the next owner and adding these to the end of the coin. A payee can verify the signatures to verify the chain of ownership.&lt;/p>
&lt;p>&lt;img src="https://github.com/worldofrorrim/worldofrorrim.github.io/blob/master/static/images/transaction-en.jpg?raw=true" alt="">&lt;/p>
&lt;p>我们将电子硬币定义为数字签名链。每个所有者通过对上一次交易的哈希和下一个所有者的公钥进行数字签名，并将这些添加到硬币的末尾, 将硬币转移到下一个所有者手中。收款人可以验证签名以验证所有权链。&lt;/p>
&lt;p>&lt;img src="https://github.com/worldofrorrim/worldofrorrim.github.io/blob/master/static/images/transactions.svg?raw=true" alt="">&lt;/p>
&lt;p>The problem of course is the payee can't verify that one of the owners did not double-spend the coin. A common solution is to introduce a trusted central authority, or mint, that checks every transaction for double spending. After each transaction, the coin must be returned to the mint to issue a new coin, and only coins issued directly from the mint are trusted not to be double-spent. The problem with this solution is that the fate of the entire money system depends on the company running the mint, with every transaction having to go through them, just like a bank.&lt;/p>
&lt;p>问题当然是收款人无法核实其中一个所有者没有重复消费过这个电子货币。常见的解决方案是引入一个可信的中心化权威方，或称“铸币厂”，检查每笔交易的双重支出。每一次交易发生之后，硬币必须返回到铸币厂才能发行新的硬币, 只有从铸币厂直接发行的硬币才能被信任不会重复支出。这种解决方案的问题在于，整个货币体系的命运取决于经营铸币厂的公司，每笔交易都必须通过铸币厂,像银行一样。&lt;/p>
&lt;p>We need a way for the payee to know that the previous owners did not sign any earlier transactions. For our purposes, the earliest transaction is the one that counts, so we don't care about later attempts to double-spend. The only way to confirm the absence of a transaction is to be aware of all transactions. In the mint based model, the mint was aware of all transactions and decided which arrived first. To accomplish this without a trusted party, transactions must be publicly announced[^1], and we need a system for participants to agree on a single history of the order in which they were received. The payee needs proof that at the time of each transaction, the majority of nodes agreed it was the first received.&lt;/p>
&lt;p>我们需要一种方法让收款人知道以前的所有者没有签署任何早期交易。就我们的目的而言，只有最早的交易是算数的，所以，我们并不关心其后的双重支付企图。确认一笔交易不存在的唯一方法是知道所有的交易。在铸币厂模型之中，铸币厂已然知道了所有的交易，并且能够确定这些交易的顺序,哪个先到。为了在没有受信任方的情况下完成此操作，必须公开宣布交易[^1]，并且我们需要一种让参与者就接收订单的单一历史达成共识的系统。收款人需要证明在每笔交易发生之时，大多数节点能够认同它是第一个被接收的。&lt;/p>
&lt;h2 id="3-时间戳服务器timestamp-servrer">3. 时间戳服务器（Timestamp Servrer）&lt;/h2>
&lt;hr>
&lt;p>The solution we propose begins with a timestamp server. A timestamp server works by taking a hash of a block of items to be timestamped and widely publishing the hash, such as in a newspaper or Usenet post[^2] [^3] [^4] [^5]. The timestamp proves that the data must have existed at the time, obviously, in order to get into the hash. Each timestamp includes the previous timestamp in its hash, forming a chain, with each additional timestamp reinforcing the ones before it.&lt;/p>
&lt;p>&lt;img src="https://github.com/worldofrorrim/worldofrorrim.github.io/blob/master/static/images/timestamp-server-en.jpg?raw=true" alt="">&lt;/p>
&lt;p>我们提出的解决方案开始于时间戳服务器。时间戳服务器的工作原理是对要打时间戳的记录块进行散列，并广泛发布(就像在报纸或新闻组帖子一样[^2] [^3] [^4] [^5])散列。显然，时间戳能够证明那数据在那个时间点已然存在，否则那哈希也就无法生成。每个时间戳在其哈希中包含着前一个的时间戳，从而形成了一个链条，每一个新加入的时间戳都会增强之前的时间戳。&lt;/p>
&lt;p>&lt;img src="https://github.com/worldofrorrim/worldofrorrim.github.io/blob/master/static/images/timestamp-server.svg?raw=true" alt="">&lt;/p>
&lt;h2 id="4工作证明proof-of-work">4.工作证明（Proof-of-Work）&lt;/h2>
&lt;hr>
&lt;p>To implement a distributed timestamp server on a peer-to-peer basis,we will need to use a proof-of-work system similar to Adam Back's Hashcash [^6],rather than newspaper or Usenet posts.The proof-of-work involves scanning for a value that when hashed,such as with SHA-256,the hash begins with a number of zero bits.The average work required is exponential in the number of zero bits required and can be verified by executing a single hash.&lt;/p>
&lt;p>要在点对点的基础上实现分布式时间戳服务器,我们需要使用一个类似亚当·伯克的哈希[^6]现金那样的工作证明系统,而不是像报纸或Usenet新闻组帖子那样的东西.工作证明包括寻找一个哈希值,例如使用SHA-256算法计算的哈希值,这个哈希值以一定数量的0开头,所需的平均工作量是所需要0的位数的指数,可以通过执行单个哈希来验证它.&lt;/p>
&lt;p>For our timestamp network,we implement the proof-of-work by incrementing a nonce in the block until a value is found that gives the block's hash the required zero bits.Once the CPU effort has been expended to make it satisfy the proof-of-work,the block cannot be changed without redong the work.As later blocks are chained after it,the work to change the block would include redoing all the blocks after it.
&lt;img src="https://github.com/worldofrorrim/worldofrorrim.github.io/blob/master/static/images/proof-of-work.jpg?raw=true" alt="">&lt;/p>
&lt;p>在我们的时间戳网络中,我们通过不断地在区块之中增加一个额随机数(Nonce)直到提供给区块的哈希值满足需要的0的位数的值被找到,从而实现工作证明.一旦CPU耗费算力所获得的结果满足工作证明,那么这个区块将不再能被更改,除非重新完成它之前的所有的工作.随着新的区块被不断添加到当前区块的后边,改变当前区块就相当于要重新完成所有气候区块的计算工作.&lt;/p>
&lt;p>&lt;img src="https://github.com/worldofrorrim/worldofrorrim.github.io/blob/master/static/images/proof-of-work.svg?raw=true" alt="">&lt;/p>
&lt;p>The proof-of-work alse solves the problem of determining representation in majority decision making. If the majority were based on one-IP-address-one-vote,it could be subverted by anyone able to allocate many IPs. Proof-of-work is essentially one-CPU-one-vote.The majority decision is represented by the longest chain,which has the greatest proof-of-work effort invested in it.If a majority of CPU power is controlled by honest nodes, the honest chain will grow the fastest and outpace any competing chains. To modify a past block, an attacker would have to redo the proof-of-work of the block and all blocks after it and then catch up with and surpass the work of the honest nodes. We will show later that the probability of a slower attacker catching up diminishes exponentially as subsequent blocks are added.&lt;/p>
&lt;p>工作证明同时也解决了在大多数决策中,确定代表的问题,即谁能代表大多数做决定的问题.如果&amp;quot;大多数&amp;quot;时基于&amp;quot;一个IP地址一票&amp;quot;的话,那么任何可以分配到很多IP的人都可以颠覆这个系统.工作证明本质上是一个CPU一票。大多数决策由投入了最多工作量的最长链来代表。如果大多数 CPU 算力被诚实的节点所控制，那么诚实链成长最为迅速，其速度会远超其他竞争链。为了更改一个已经产生的区块，攻击者将不得不重新完成那个区块以及所有其后区块的的工作证明，而后还要追上并超过诚实节点的工作。后文我们将展示为什么一个被拖延了的攻击者能够追上的可能性将随着区块的不断增加而指数级降低。&lt;/p>
&lt;p>To compensate for increasing hardware speed and varying interest in running nodes over time,the proof-of-work difficulty is determined by a moving average targeting an average number of blocks per hour.If they're generated too fast,the difficulty increases.&lt;/p>
&lt;p>为了对硬件算力综合的不断增加和随着时间的推移参与节点数量的变化进行应对，工作证明的难度基于平均每小时产生区块数量的动态平均值。如果区块生成得过快了，那么难度将会增加。&lt;/p>
&lt;h2 id="5网络network">5.网络（Network）&lt;/h2>
&lt;hr>
&lt;p>The steps to run the network are as follows:&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>New transactions are broadcast to all nodes.&lt;/li>
&lt;li>Each node collects new transactions into a block.&lt;/li>
&lt;li>Each node works on finding a difficult proof-of-work for its block.&lt;/li>
&lt;li>When a node finds a proof-of-work ,it broadcasts the block to all nodes.&lt;/li>
&lt;li>Nodes accept the block only if all transactions in it are valid and not already spent.&lt;/li>
&lt;li>Nodes express their acceptance of the block by working on creating the next block in the chain, using the hash of the accepted block as the previous hash.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>运行网络的步骤如下:&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>新交易想所有节点广播.&lt;/li>
&lt;li>每个节点将收集到的新交易打包到一个区块中.&lt;/li>
&lt;li>每个节点开始寻找一个有一定难度的工作证明.&lt;/li>
&lt;li>当其中一个节点找到并完成了工作证明,它就向所有节点广播这个区块.&lt;/li>
&lt;li>如果这个区块中的所有交易都是有效的,并且不是已经被花费过的交易,那么节点才接受这个区块.&lt;/li>
&lt;li>节点通过在创建下一个区块的时候,把被接受的区块的哈希作为新区块的上一个区块的哈希,向网络表示自己接受这个区块.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>Nodes always consider the longest chain to be the correct one and will keep working on extending it.If two nodes broadcast different versions of the next block simultaneously, some nodes may receive one or the other first.In that case ,they work on the first one they received,but save the other branch in case it becomes longer.The tie will be broken when the next proof-of-work is found and one branch becomes longer; the nodes that were working on the other branch will then switch to the longer one.&lt;/p>
&lt;h2 id="6奖励incentive">6.奖励（Incentive）&lt;/h2>
&lt;hr>
&lt;h2 id="7回收硬盘空间reclaiming-disk-space">7.回收硬盘空间（Reclaiming Disk Space）&lt;/h2>
&lt;hr>
&lt;h2 id="8简化版支付确认simplified-payment-verification">8.简化版支付确认（Simplified Payment Verification）&lt;/h2>
&lt;hr>
&lt;h2 id="9价值的组合与分割combining-and-splitting-value">9.价值的组合与分割（Combining and Splitting Value）&lt;/h2>
&lt;hr>
&lt;h2 id="10隐私privacy">10.隐私（Privacy）&lt;/h2>
&lt;hr>
&lt;h2 id="11计算calculations">11.计算（Calculations）&lt;/h2>
&lt;hr>
&lt;h2 id="12结论conclusion">12.结论（Conclusion）&lt;/h2>
&lt;hr>
&lt;hr>
&lt;h2 id="参考文献references">参考文献（References）&lt;/h2>
&lt;hr>
&lt;p>1.W Dai（戴伟）,a scheme for a group of untraceable digital pseudonyms to pay each other with money and to enforce contracts amongst themselves without outside help（一种能够借助电子假名在群体内部相互支付并迫使个体遵守规则且不需要外界协助的电子现金机制）, “B-money”, &lt;a href="http://www.weidai.com/bmoney.txt,">http://www.weidai.com/bmoney.txt,&lt;/a> 1998↵&lt;/p>
&lt;p>2.H. Massias, X.S. Avila, and J.-J. Quisquater, &amp;quot;Design of a secure timestamping service with minimal trust requirements,&amp;quot;（在最小化信任的基础上设计一种时间戳服务器） In 20th Symposium on Information Theory in the Benelux, May 1999.↵&lt;/p>
&lt;p>3.S. Haber, W.S. Stornetta, &amp;quot;How to time-stamp a digital document,&amp;quot; （怎样为电子文件添加时间戳）In Journal of Cryptology, vol 3, No.2, pages 99-111, 1991.↵&lt;/p>
&lt;p>4.D. Bayer, S. Haber, W.S. Stornetta, &amp;quot;Improving the efficiency and reliability of digital time-stamping,&amp;quot;（提升电子时间戳的效率和可靠性） In Sequences II: Methods in Communication, Security and Computer Science, pages 329-334, 1993.↵&lt;/p>
&lt;p>5.S. Haber, W.S. Stornetta, &amp;quot;Secure names for bit-strings,&amp;quot;（比特字串的安全命名） In Proceedings of the 4th ACM Conference on Computer and Communications Security, pages 28-35, April 1997. on Computer and Communications Security, pages 28-35, April 1997.↵&lt;/p>
&lt;p>6.A. Back, &amp;quot;Hashcash - a denial of service counter-measure,&amp;quot;（哈希现金——拒绝服务式攻击的克制方法）http://www.hashcash.org/papers/hashcash.pdf, 2002. ↵&lt;/p>
&lt;p>7.R.C. Merkle, &amp;quot;Protocols for public key cryptosystems,&amp;quot; （公钥密码系统的协议）In Proc. 1980 Symposium on Security and Privacy, IEEE Computer Society, pages 122-133, April 1980. S. Haber, W.S. Stornetta, &amp;quot;Secure names for bit-strings,&amp;quot;（比特字串安全命名） In Proceedings of the 4th ACM Conference on Computer and Communications Security, pages 28-35, April 1997. on Computer and Communications Security, pages 28-35, April 1997. H. Massias, X.S. Avila, and J.-J. Quisquater, &amp;quot;Design of a secure timestamping service with minimal trust requirements,&amp;quot;（在最小化信任的条件下设计一种时间戳服务器） In 20th Symposium on Information Theory in the Benelux, May 1999. ↵&lt;/p>
&lt;p>8.W. Feller, &amp;quot;An introduction to probability theory and its applications,&amp;quot; （概率学理论与应用导论）1957 ↵&lt;/p></description><category domain="https://worldofrorrim.github.io/en/tech/">tech</category></item></channel></rss>